  -----
  JaBudget Domain - Java Programming Studio
  -----
  alexxismachine
  -----
 
JaBudget Domain

  JaBudget Domain definiert die Business Domain.   

~~ Pro Domain-Objekt eine Validator-Klasse?

~~ Separate Builder-Klasse?

* Account (Konto)

  Ein Account wird anhand seiner <<<id>>> identifiziert. 
  Auf diesem Feld basieren auch <<<equals()>>> und <<<hashCode()>>>.
  Ein Account hat eine Währung (noch nicht modelliert).
  Ein Account hat zu einem Datum einen Stand. (noch nicht modelliert).
  Anhand von Datum und Stand kann mit den Entries der Stand zu einem anderen Datum ermittelt werden.
  Das Datum ist auf Mitternacht bezogen.
  Alle Buchung des gleichen Datums erfolgen nach dem Stand des Kontos.

~~ Entwicklen eines Comparators, der Instanzen findet, die die "gleichen" Felder aber eine andere id haben?

~~ Verwenden einer AccountId-Klasse?

* Entry (Buchung)

  Ein Entry ist eine Buchung auf einem Account.
  Ein Entry hat eine eine eigene id, ist darüber referenzierbar (Entität).
  Ein Entry hat eine Referenz zu seinem Account (AccountId).
  (Zu einem Entry kann es einen "gegen Entry" geben, der auf dem "gegen Account" liegt.
  Entry und gegen Entry sind unterschiedliche Entitäten (haben unterschiedlieche id und AccountId)
  Eine Beziehung zwischen beiden ist aktuell nicht vorgesehen.)
  Ein Entry hat einen Betrag, der positiv oder negativ sein kann.
  Der Betrag hat 2? Nachkommastellen.
  Die Währung des Betrags eines Entries wird vom Account abegleitet (noch nicht modelliert)
  Ein Entry hat eine Beschreibung.
  Ein Entry hat ein Valuta-Datum.
  Ein Entry hat ein Buchungs-Datum.
  Ein Entry hat <keinen> Kontostand!

* Testing

  Neben den regulären Unit-Tests in <<<src/test/java>>> gibt es Test-Fixtures, die in
  <<<src/test/fixtures>>> liegen.
  Diese enthalten Klassen zur vereinfachten Erzeugung von Testdaten.
  
  Damit auch abhängige Projekte diese Fixtures nutzen können
  wird aus diesen über ein Assembly eine <<<jar>>> mit dem <<<classifier>>> 
  <<<fixtures>>> erstellt.
  
  Die Fixtures liegen alle unter <<<fixtures>>> unterhalb des Basispackages, 
  damit es nicht zu Paket-Überschneidungen kommen kann.